// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// PutFlagRequest put flag request
// swagger:model putFlagRequest
type PutFlagRequest struct {

	// enabled data records will get data logging in the metrics pipeline, for example, kafka.
	DataRecordsEnabled *bool `json:"dataRecordsEnabled,omitempty"`

	// description
	// Required: true
	// Min Length: 1
	Description *string `json:"description"`

	// key
	Key *string `json:"key,omitempty"`
}

// Validate validates this put flag request
func (m *PutFlagRequest) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDescription(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *PutFlagRequest) validateDescription(formats strfmt.Registry) error {

	if err := validate.Required("description", "body", m.Description); err != nil {
		return err
	}

	if err := validate.MinLength("description", "body", string(*m.Description), 1); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *PutFlagRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *PutFlagRequest) UnmarshalBinary(b []byte) error {
	var res PutFlagRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
